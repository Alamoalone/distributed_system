server:
  port: 9004

spring:
  application:
    name: distributed-order-service
  cloud:
    # Registration center address
    nacos:
      discovery:
        server-addr: 8.130.44.244:8848

  # Message queue
  rabbitmq:
    host: 8.130.44.244
    port: 5672
    virtual-host: /
    password: password
    username: admin
    # Enable manual message acknowledgment
    listener:
      simple:
        acknowledge-mode: manual

# Database configuration
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/cafe_order?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: zzf19970112472X

# Redis configuration
  redis:
    host: 8.130.44.244
    port: 8000
    password: 123456

# Configure plus to print SQL logs
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

feign:
  client:
    config:
      default:
        connectTimeout: 10000 # Connection timeout (milliseconds)
        readTimeout: 30000 # Read timeout (milliseconds)

# Set log levels, ERROR/WARN/INFO/DEBUG, default is INFO and above
logging:
  level:
    root: INFO

# Custom message queue configuration, sending lock inventory message -> delay exchange -> lock.queue -> dead letter exchange -> release.queue
mqconfig:
  # Delay queue, cannot be listened to consume
  order_close_delay_queue: order.close.delay.queue

  # Queue where messages are forwarded after expiration from delay queue
  order_close_queue: order.close.queue

  # Exchange
  order_event_exchange: order.event.exchange

  # Routing key for entering the delay queue
  order_close_delay_routing_key: order.close.delay.routing.key

  # Routing key for messages expiring and entering the release queue, routing key for entering the dead letter queue
  order_close_routing_key: order.close.routing.key

  # Message expiration time, in milliseconds, temporarily set to close orders every 5 minutes
  ttl: 300000

# Alipay configuration
alipay:
  # Redirect page after successful payment
  success_return_url: https://google.com

  # Alipay notification callback interface, also needs to be configured in the Ant Financial Open Platform application backend
  callback_url: https://google.com
